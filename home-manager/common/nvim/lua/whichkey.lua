local which_key = require("which-key")

which_key.setup({ icons = { mappings = false } })

which_key.add({
	{
		"<leader>/",
		"<Plug>(comment_toggle_linewise_current)",
		desc = "Comment toggle current line",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>b", group = "Buffers", nowait = true, icon = "", remap = false },
	{
		"<leader>bD",
		"<cmd>BufferLineSortByDirectory<cr>",
		desc = "Sort by directory",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>bL",
		"<cmd>BufferLineSortByExtension<cr>",
		desc = "Sort by language",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>bb", "<cmd>BufferLineCyclePrev<cr>", desc = "Previous", nowait = true, icon = "", remap = false },
	{
		"<leader>be",
		"<cmd>BufferLinePickClose<cr>",
		desc = "Pick which buffer to close",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>bh",
		"<cmd>BufferLineCloseLeft<cr>",
		desc = "Close all to the left",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>bj", "<cmd>BufferLinePick<cr>", desc = "Jump", nowait = true, icon = "", remap = false },
	{
		"<leader>bl",
		"<cmd>BufferLineCloseRight<cr>",
		desc = "Close all to the right",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>bn", "<cmd>BufferLineCycleNext<cr>", desc = "Next", nowait = true, icon = "", remap = false },
	{ "<leader>bw", "<cmd>bw<cr>", desc = "Wipeout", nowait = true, icon = "", remap = false },
	{ "<leader>c", "<cmd>bw<CR>", desc = "Close Buffer", nowait = true, icon = "", remap = false },
	{ "<leader>d", group = "Debug", nowait = true, icon = "", remap = false },
	{
		"<leader>dC",
		"<cmd>lua require'dap'.run_to_cursor()<cr>",
		desc = "Run To Cursor",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>dQ",
		"<cmd>lua require'dap'.terminate()<cr>",
		desc = "Terminate",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>db",
		"<cmd>lua require'dap'.step_back()<cr>",
		desc = "Step Back",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>dc",
		"<cmd>lua require'dap'.continue()<cr>",
		desc = "Continue",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>dd",
		"<cmd>lua require'dap'.disconnect()<cr>",
		desc = "Disconnect",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>dg",
		"<cmd>lua require'dap'.session()<cr>",
		desc = "Get Session",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>di",
		"<cmd>lua require'dap'.step_into()<cr>",
		desc = "Step Into",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>do",
		"<cmd>lua require'dap'.step_over()<cr>",
		desc = "Step Over",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>dp", "<cmd>lua require'dap'.pause()<cr>", desc = "Pause", nowait = true, icon = "", remap = false },
	{ "<leader>dq", "<cmd>lua require'dap'.close()<cr>", desc = "Quit", nowait = true, icon = "", remap = false },
	{
		"<leader>dr",
		"<cmd>lua require'dap'.repl.toggle()<cr>",
		desc = "Toggle Repl",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>ds",
		"<cmd>lua require'dap'.continue()<cr>",
		desc = "Start",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>dt",
		"<cmd>lua require'dap'.toggle_breakpoint()<cr>",
		desc = "Toggle Breakpoint",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>du",
		"<cmd>lua require'dap'.step_out()<cr>",
		desc = "Step Out",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>f", group = "Find", nowait = true, icon = "", remap = false },
	{ "<leader>fC", "<cmd>Telescope commands<cr>", desc = "Find Command", nowait = true, icon = "", remap = false },
	{
		"<leader>fH",
		"<cmd>Telescope highlights<cr>",
		desc = "Find highlight group",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>fM",
		"<cmd>Telescope man_pages<cr>",
		desc = "Find Man Page",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>fR",
		"<cmd>Telescope registers<cr>",
		desc = "Find Register",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>ff", find_files_from_project_root, desc = "Find File", nowait = true, icon = "", remap = false },
	{
		"<leader>fg",
		"<cmd>Telescope git_files<cr>",
		desc = "Find Git File",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>fh", "<cmd>Telescope help_tags<cr>", desc = "Find Help", nowait = true, icon = "", remap = false },
	{ "<leader>fk", "<cmd>Telescope keymaps<cr>", desc = "Find Keymap", nowait = true, icon = "", remap = false },
	{
		"<leader>fr",
		"<cmd>Telescope oldfiles<cr>",
		desc = "Find Recent File",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>ft", live_grep_from_project_root, desc = "Find Text", nowait = true, icon = "", remap = false },
	{ "<leader>g", group = "Git", nowait = true, icon = "", remap = false },
	{
		"<leader>gC",
		"<cmd>Telescope git_bcommits<cr>",
		desc = "Checkout commit(for current file)",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gR",
		"<cmd>lua require 'gitsigns'.reset_buffer()<cr>",
		desc = "Reset Buffer",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gb",
		"<cmd>Telescope git_branches<cr>",
		desc = "Checkout branch",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gc",
		"<cmd>Telescope git_commits<cr>",
		desc = "Checkout commit",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>gd", "<cmd>Gitsigns diffthis HEAD<cr>", desc = "Git Diff", nowait = true, icon = "", remap = false },
	{
		"<leader>gj",
		"<cmd>lua require 'gitsigns'.next_hunk()<cr>",
		desc = "Next Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gk",
		"<cmd>lua require 'gitsigns'.prev_hunk()<cr>",
		desc = "Prev Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gl",
		"<cmd>lua require 'gitsigns'.blame_line()<cr>",
		desc = "Blame",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>go",
		"<cmd>Telescope git_status<cr>",
		desc = "Open changed file",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gp",
		"<cmd>lua require 'gitsigns'.preview_hunk()<cr>",
		desc = "Preview Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gr",
		"<cmd>lua require 'gitsigns'.reset_hunk()<cr>",
		desc = "Reset Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gs",
		"<cmd>lua require 'gitsigns'.stage_hunk()<cr>",
		desc = "Stage Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>gu",
		"<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>",
		desc = "Undo Stage Hunk",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>h", "<cmd>nohlsearch<CR>", desc = "No Highlight", nowait = true, icon = "", remap = false },
	{ "<leader>l", group = "LSP", nowait = true, icon = "", remap = false },
	{
		"<leader>lS",
		"<cmd>Telescope lsp_dynamic_workspace_symbols<cr>",
		desc = "Workspace Symbols",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>la",
		"<cmd>lua vim.lsp.buf.code_action()<cr>",
		desc = "Code Action",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>ld",
		"<cmd>Telescope diagnostics bufnr=0 theme=get_ivy<cr>",
		desc = "Buffer Diagnostics",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>le",
		"<cmd>Telescope quickfix<cr>",
		desc = "Telescope Quickfix",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>lf", vim.lsp.buf.format, desc = "Format", nowait = true, icon = "", remap = false },
	{ "<leader>li", "<cmd>LspInfo<cr>", desc = "Info", nowait = true, icon = "", remap = false },
	{ "<leader>lj", vim.diagnostic.goto_next, desc = "Next Diagnostic", nowait = true, icon = "", remap = false },
	{ "<leader>lk", vim.diagnostic.goto_prev, desc = "Prev Diagnostic", nowait = true, icon = "", remap = false },
	{ "<leader>ll", vim.lsp.codelens.run, desc = "CodeLens Action", nowait = true, icon = "", remap = false },
	{ "<leader>lq", vim.diagnostic.setloclist, desc = "Quickfix", nowait = true, icon = "", remap = false },
	{ "<leader>lr", vim.lsp.buf.rename, desc = "Rename", nowait = true, icon = "", remap = false },
	{
		"<leader>ls",
		"<cmd>Telescope lsp_document_symbols<cr>",
		desc = "Document Symbols",
		nowait = true,
		icon = "",
		remap = false,
	},
	{
		"<leader>lw",
		"<cmd>Telescope diagnostics<cr>",
		desc = "Diagnostics",
		nowait = true,
		icon = "",
		remap = false,
	},
	{ "<leader>q", "<cmd>q<CR>", desc = "Quit", nowait = true, icon = "", remap = false },
	{ "<leader>w", "<cmd>w<CR>", desc = "Save", nowait = true, icon = "", remap = false },
})

which_key.add({
	{
		"<leader>/",
		"<Plug>(comment_toggle_linewise_visual)",
		desc = "Comment toggle linewise (visual)",
		mode = "v",
		nowait = true,
		icon = "",
		remap = false,
	},
})

which_key.add({
	{ "g", group = "Go", icon = "" },
	{ "gðŸš«", hidden = true, icon = "" },
	{ "z", group = "Fold", icon = "" },
	{ "zðŸš«", hidden = true, icon = "" },
})

which_key.add({
	mode = { "v" },
	{ "g", group = "Go", icon = "" },
	{ "gðŸš«", hidden = true, icon = "" },
	{ "z", group = "Fold", icon = "" },
	{ "zðŸš«", hidden = true, icon = "" },
})
